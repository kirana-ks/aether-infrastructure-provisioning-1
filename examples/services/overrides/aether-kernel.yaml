environment: "prod"
aether:
  kernel:
    url: https://kernel.${project}.${domain}
odk_url: https://odk.${project}.${domain}
domain: ${domain}
trusted_origins: .${project}.${domain}
sentry:
  enabled: false
app:
  secret: kernel-secrets
  db:
    host: 127.0.0.1
    user: ${project}_kernel
    name: ${project}_kernel
    readonly_user: ${project}_kernel_ro
    secret: database-credentials
  storage:
    backend: gcs
    bucket:
      name: ${gcs_bucket_name}
      credentialsPath: "/secrets/gcp/credentials.json"
      credentialsSecret: "${gcs_bucket_credentials}"
service:
  type: NodePort
ingress:
  certsecret: kernel.${project}.${domain}
  hosts:
    - kernel.${project}.${domain}
  ssl:
    letsencrypt: true
    cert_secret: kernel.${project}.${domain}
  annotations:
    nginx.ingress.kubernetes.io/enable-cors: "true"
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: "75M"
    ingress.kubernetes.io/ssl-redirect: "true"
    kubernetes.io/tls-acme: "true"
    certmanager.k8s.io/cluster-issuer: letsencrypt
    certmanager.k8s.io/acme-challenge-type: dns01
    certmanager.k8s.io/acme-dns01-provider: ${dns_provider}
database:
  # set google sql instance name, e.g. modern-rex-207814:europe-west1:gatherdb-instance
  instance: ${database_instance_name}
provider:
  gcp: true
